{
  "version": "3.4",
  "log": [
    {
      "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:21",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.17"
      },
      "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:57",
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:AddressUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.17"
      },
      "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:AddressUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:9",
        "version": {
          "withMetadata": "078c5862372c8eb6539a7b2749c63739b4ac1495a74ac9e110f1722ccbfcb789",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.17"
      },
      "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:17",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.17"
      },
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin/contracts/access/Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.17"
      },
      "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:35",
        "version": {
          "withMetadata": "ae394f181d47dfb058a955630ab0c03348e0357dd32bf56a9d5fac6e45228e24",
          "withoutMetadata": "a92681274947382be0406b99a11a62ccccc6f412fcb3a354d51624c87dc00569",
          "linkedWithoutMetadata": "a92681274947382be0406b99a11a62ccccc6f412fcb3a354d51624c87dc00569"
        },
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.17"
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.17"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:13",
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.17"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.17"
      },
      "contracts/ERC20Verifier.sol:ERC20Verifier": {
        "src": "contracts/ERC20Verifier.sol:9",
        "version": {
          "withMetadata": "57c6032897108bcd6fdc9e23639b78972bc8287e4121dc09b07080027e0a9f95",
          "withoutMetadata": "dd59007f6fb3a57b03a6e95b3194e197ad0455147274bb102d2b63d154da00cc",
          "linkedWithoutMetadata": "dd59007f6fb3a57b03a6e95b3194e197ad0455147274bb102d2b63d154da00cc"
        },
        "inherit": [
          "contracts/verifiers/ZKPVerifier.sol:ZKPVerifier",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context",
          "contracts/interfaces/IZKPVerifier.sol:IZKPVerifier"
        ],
        "libraries": [
          "contracts/lib/GenesisUtils.sol:GenesisUtils"
        ],
        "methods": [
          "(string,string)"
        ],
        "linkReferences": [
          {
            "src": "contracts/lib/Poseidon.sol",
            "name": "PoseidonUnit6L",
            "length": 20,
            "start": 4880,
            "placeholder": "__$149ddb96bf5d692e763ea65f305faba249$__"
          },
          {
            "src": "contracts/lib/SpongePoseidon.sol",
            "name": "SpongePoseidon",
            "length": 20,
            "start": 4754,
            "placeholder": "__$933e38ee1bac859086d8d4e5388b6d5e5f$__"
          }
        ],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20Verifier",
            "src": "contracts/ERC20Verifier.sol:18"
          },
          {
            "kind": "state-variable-assignment",
            "name": "TOKEN_AMOUNT_FOR_AIRDROP_PER_ID",
            "src": "contracts/ERC20Verifier.sol:15"
          },
          {
            "kind": "external-library-linking",
            "name": "PoseidonUnit6L",
            "src": "contracts/lib/Poseidon.sol"
          },
          {
            "kind": "external-library-linking",
            "name": "SpongePoseidon",
            "src": "contracts/lib/SpongePoseidon.sol"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "proofs",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_address,t_mapping(t_uint64,t_bool))",
              "contract": "ZKPVerifier",
              "src": "contracts/verifiers/ZKPVerifier.sol:13"
            },
            {
              "label": "requestQueries",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_uint64,t_struct(CircuitQuery)1638_storage)",
              "contract": "ZKPVerifier",
              "src": "contracts/verifiers/ZKPVerifier.sol:15"
            },
            {
              "label": "requestValidators",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_uint64,t_contract(ICircuitValidator)1673)",
              "contract": "ZKPVerifier",
              "src": "contracts/verifiers/ZKPVerifier.sol:16"
            },
            {
              "label": "_supportedRequests",
              "offset": 0,
              "slot": "9",
              "type": "t_array(t_uint64)dyn_storage",
              "contract": "ZKPVerifier",
              "src": "contracts/verifiers/ZKPVerifier.sol:18"
            },
            {
              "label": "idToAddress",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC20Verifier",
              "src": "contracts/ERC20Verifier.sol:12"
            },
            {
              "label": "addressToId",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20Verifier",
              "src": "contracts/ERC20Verifier.sol:13"
            },
            {
              "label": "TOKEN_AMOUNT_FOR_AIRDROP_PER_ID",
              "offset": 0,
              "slot": "12",
              "type": "t_uint256",
              "contract": "ERC20Verifier",
              "src": "contracts/ERC20Verifier.sol:15"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint64)dyn_storage": {
              "label": "uint64[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(ICircuitValidator)1673": {
              "label": "contract ICircuitValidator",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_uint64,t_bool))": {
              "label": "mapping(address => mapping(uint64 => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint64,t_bool)": {
              "label": "mapping(uint64 => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint64,t_contract(ICircuitValidator)1673)": {
              "label": "mapping(uint64 => contract ICircuitValidator)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint64,t_struct(CircuitQuery)1638_storage)": {
              "label": "mapping(uint64 => struct ICircuitValidator.CircuitQuery)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(CircuitQuery)1638_storage": {
              "label": "struct ICircuitValidator.CircuitQuery",
              "members": [
                {
                  "label": "schema",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "claimPathKey",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "operator",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "value",
                  "type": "t_array(t_uint256)dyn_storage",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "queryHash",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "circuitId",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "5"
                }
              ],
              "numberOfBytes": "192"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.17"
      },
      "contracts/interfaces/ICircuitValidator.sol:ICircuitValidator": {
        "src": "contracts/interfaces/ICircuitValidator.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "verify(uint256[],uint256[2],uint256[2][2],uint256[2],uint256)",
          "getCircuitId()",
          "getChallengeInputIndex()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.17"
      },
      "contracts/interfaces/IState.sol:IState": {
        "src": "contracts/interfaces/IState.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "getStateInfoById(uint256)",
          "getStateInfoByIdAndState(uint256,uint256)",
          "getGISTRootInfo(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.17"
      },
      "contracts/interfaces/IVerifier.sol:IVerifier": {
        "src": "contracts/interfaces/IVerifier.sol:3",
        "inherit": [],
        "libraries": [],
        "methods": [
          "verifyProof(uint256[2],uint256[2][2],uint256[2],uint256[])"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.17"
      },
      "contracts/interfaces/IZKPVerifier.sol:IZKPVerifier": {
        "src": "contracts/interfaces/IZKPVerifier.sol:7",
        "inherit": [],
        "libraries": [],
        "methods": [
          "submitZKPResponse(uint64,uint256[],uint256[2],uint256[2][2],uint256[2])",
          "setZKPRequest(uint64,address,uint256,uint256,uint256,uint256[])",
          "setZKPRequestRaw(uint64,address,uint256,uint256,uint256,uint256[],uint256)",
          "getZKPRequest(uint64)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.17"
      },
      "contracts/lib/GenesisUtils.sol:GenesisUtils": {
        "src": "contracts/lib/GenesisUtils.sol:6",
        "version": {
          "withMetadata": "1bd09d0d84ee32fae714355091874bf1c155bbdc54d8563600da27bcc9243a30",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [
          "solidity-bytes-utils/contracts/BytesLib.sol:BytesLib"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.17"
      },
      "contracts/lib/Poseidon.sol:Poseidon": {
        "src": "contracts/lib/Poseidon.sol:12",
        "version": {
          "withMetadata": "2f762917f46fde8bae5802bb6cf2fcafb3391e8a2b48e7cb2b2c6f8f79478804",
          "withoutMetadata": "2c4c5c38ea695fdca748fa475c289343c53c29f1965801d0cc56cbcb90d3f8e7",
          "linkedWithoutMetadata": "2c4c5c38ea695fdca748fa475c289343c53c29f1965801d0cc56cbcb90d3f8e7"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address,address)",
          "hash2(uint256[2])",
          "hash3(uint256[3])"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Poseidon",
            "src": "contracts/lib/Poseidon.sol:16"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_poseidonUnit2",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(PoseidonUnit2)2269",
              "contract": "Poseidon",
              "src": "contracts/lib/Poseidon.sol:13"
            },
            {
              "label": "_poseidonUnit3",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(PoseidonUnit3)2280",
              "contract": "Poseidon",
              "src": "contracts/lib/Poseidon.sol:14"
            }
          ],
          "types": {
            "t_contract(PoseidonUnit2)2269": {
              "label": "contract PoseidonUnit2",
              "numberOfBytes": "20"
            },
            "t_contract(PoseidonUnit3)2280": {
              "label": "contract PoseidonUnit3",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.17"
      },
      "contracts/lib/Poseidon.sol:PoseidonUnit1L": {
        "src": "contracts/lib/Poseidon.sol:30",
        "version": {
          "withMetadata": "515d51796c32a853eef77010e5bd4a8e0b88de1a73cce72007740f466c99c38a",
          "withoutMetadata": "17b0d2a6201ae167d2d078450e3efc6fce2d3390b2eafe9faf68199dbaa21135",
          "linkedWithoutMetadata": "17b0d2a6201ae167d2d078450e3efc6fce2d3390b2eafe9faf68199dbaa21135"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "poseidon(uint256[1])"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.17"
      },
      "contracts/lib/Poseidon.sol:PoseidonUnit2": {
        "src": "contracts/lib/Poseidon.sol:4",
        "version": {
          "withMetadata": "e01234f80c5de6a0361fba9c5785da3dbfa65f707efe5689ae9b569625d29720",
          "withoutMetadata": "8e9ceda5b98980fd515245c23186072f798515f578a8772917ce513c38d0e8b1",
          "linkedWithoutMetadata": "8e9ceda5b98980fd515245c23186072f798515f578a8772917ce513c38d0e8b1"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "poseidon(uint256[2])"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.17"
      },
      "contracts/lib/Poseidon.sol:PoseidonUnit2L": {
        "src": "contracts/lib/Poseidon.sol:34",
        "version": {
          "withMetadata": "63b71ea27c4ebfbc81a0d13756bbcb2aa8751bcf822224eb96213988b1adcd59",
          "withoutMetadata": "3f0721675fee28c4c460447a18a5873efa6d7cee90cc35a1f0606b2bdf491990",
          "linkedWithoutMetadata": "3f0721675fee28c4c460447a18a5873efa6d7cee90cc35a1f0606b2bdf491990"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "poseidon(uint256[2])"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.17"
      },
      "contracts/lib/Poseidon.sol:PoseidonUnit3": {
        "src": "contracts/lib/Poseidon.sol:8",
        "version": {
          "withMetadata": "28b3560038eb221ba2275edb5260e42d530cc815c23700adb59f85a477806333",
          "withoutMetadata": "4fa0f59344401c28e6e5ac955643cd7e25ec8b05ae2732dc28fa7ddf0c1a1f48",
          "linkedWithoutMetadata": "4fa0f59344401c28e6e5ac955643cd7e25ec8b05ae2732dc28fa7ddf0c1a1f48"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "poseidon(uint256[3])"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.17"
      },
      "contracts/lib/Poseidon.sol:PoseidonUnit3L": {
        "src": "contracts/lib/Poseidon.sol:38",
        "version": {
          "withMetadata": "e9a48bd662b79d6c97e1c6752d4313e0987538b620a1d83c6bc2106f3eeae641",
          "withoutMetadata": "0516be54e1f0e432ffb631890854055486eeebd021f1fbda05d4f1d7156c9fc1",
          "linkedWithoutMetadata": "0516be54e1f0e432ffb631890854055486eeebd021f1fbda05d4f1d7156c9fc1"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "poseidon(uint256[3])"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.17"
      },
      "contracts/lib/Poseidon.sol:PoseidonUnit4L": {
        "src": "contracts/lib/Poseidon.sol:42",
        "version": {
          "withMetadata": "1ce6a69a6698f4efe8ae024b06d1fbd1d3040257487aea3be5f3834e3d7d24f9",
          "withoutMetadata": "9fd6e7042dea40de897c2835342040f09ba603c21afa3d34f65a2727723fb655",
          "linkedWithoutMetadata": "9fd6e7042dea40de897c2835342040f09ba603c21afa3d34f65a2727723fb655"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "poseidon(uint256[4])"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.17"
      },
      "contracts/lib/Poseidon.sol:PoseidonUnit5L": {
        "src": "contracts/lib/Poseidon.sol:46",
        "version": {
          "withMetadata": "5cf96dd32ac171936462083bf592badcfb651b61234e06352ad9fd28a273ee09",
          "withoutMetadata": "2a6c2f6a9007c69c4c0cdda5706fec1089fadc777a60492bdba6af59020772cc",
          "linkedWithoutMetadata": "2a6c2f6a9007c69c4c0cdda5706fec1089fadc777a60492bdba6af59020772cc"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "poseidon(uint256[5])"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.17"
      },
      "contracts/lib/Poseidon.sol:PoseidonUnit6L": {
        "src": "contracts/lib/Poseidon.sol:50",
        "version": {
          "withMetadata": "8231fd4751fd7d8703619783e8e52031a3e9d0f1a7d332ad9e3b2206e0accf87",
          "withoutMetadata": "c13847050cfec585911bec0cbb2b70c4f81f3df7441de6f5be0e177d0a95f989",
          "linkedWithoutMetadata": "c13847050cfec585911bec0cbb2b70c4f81f3df7441de6f5be0e177d0a95f989"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "poseidon(uint256[6])"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.17"
      },
      "contracts/lib/SpongePoseidon.sol:SpongePoseidon": {
        "src": "contracts/lib/SpongePoseidon.sol:6",
        "version": {
          "withMetadata": "7eacea50af1357b9fab63eef43854d251142726c82808e4e59a017df2177b1aa",
          "withoutMetadata": "1752fb648e81af4238429e62d2bccae54f54d7dfc567c85b343898ec61746422",
          "linkedWithoutMetadata": "1752fb648e81af4238429e62d2bccae54f54d7dfc567c85b343898ec61746422"
        },
        "inherit": [],
        "libraries": [
          "contracts/lib/Poseidon.sol:PoseidonUnit6L"
        ],
        "methods": [
          "hash(uint256[])"
        ],
        "linkReferences": [
          {
            "src": "contracts/lib/Poseidon.sol",
            "name": "PoseidonUnit6L",
            "length": 20,
            "start": 208,
            "placeholder": "__$149ddb96bf5d692e763ea65f305faba249$__"
          },
          {
            "src": "contracts/lib/Poseidon.sol",
            "name": "PoseidonUnit6L",
            "length": 20,
            "start": 613,
            "placeholder": "__$149ddb96bf5d692e763ea65f305faba249$__"
          }
        ],
        "errors": [
          {
            "kind": "external-library-linking",
            "name": "PoseidonUnit6L",
            "src": "contracts/lib/Poseidon.sol"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.17"
      },
      "contracts/validators/CredentialAtomicQueryMTPValidator.sol:CredentialAtomicQueryMTPValidator": {
        "src": "contracts/validators/CredentialAtomicQueryMTPValidator.sol:10",
        "version": {
          "withMetadata": "74845c2912414847cb0ae45369107f4e75966e84cec0dd2007f5c9654986b49a",
          "withoutMetadata": "bf9b360735f831db71c50c119372f6d802f6909760e523531be2e581a66b9efd",
          "linkedWithoutMetadata": "bf9b360735f831db71c50c119372f6d802f6909760e523531be2e581a66b9efd"
        },
        "inherit": [
          "contracts/interfaces/ICircuitValidator.sol:ICircuitValidator",
          "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [
          "contracts/lib/GenesisUtils.sol:GenesisUtils"
        ],
        "methods": [
          "initialize(address,address)",
          "setRevocationStateExpirationTime(uint256)",
          "getCircuitId()",
          "getChallengeInputIndex()",
          "verify(uint256[],uint256[2],uint256[2][2],uint256[2],uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
            },
            {
              "label": "verifier",
              "offset": 0,
              "slot": "101",
              "type": "t_contract(IVerifier)1780",
              "contract": "CredentialAtomicQueryMTPValidator",
              "src": "contracts/validators/CredentialAtomicQueryMTPValidator.sol:14"
            },
            {
              "label": "state",
              "offset": 0,
              "slot": "102",
              "type": "t_contract(IState)1755",
              "contract": "CredentialAtomicQueryMTPValidator",
              "src": "contracts/validators/CredentialAtomicQueryMTPValidator.sol:15"
            },
            {
              "label": "revocationStateExpirationTime",
              "offset": 0,
              "slot": "103",
              "type": "t_uint256",
              "contract": "CredentialAtomicQueryMTPValidator",
              "src": "contracts/validators/CredentialAtomicQueryMTPValidator.sol:17"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(IState)1755": {
              "label": "contract IState",
              "numberOfBytes": "20"
            },
            "t_contract(IVerifier)1780": {
              "label": "contract IVerifier",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.17"
      },
      "contracts/validators/CredentialAtomicQuerySigValidator.sol:CredentialAtomicQuerySigValidator": {
        "src": "contracts/validators/CredentialAtomicQuerySigValidator.sol:10",
        "version": {
          "withMetadata": "f2b10e4385debf168fe665bbf763fce491846771362b2c215d684e9b90516eeb",
          "withoutMetadata": "7e01d3751d7b8959ef9e8ee2bbcda3087d3774040668cfb9d5f123462c1706b6",
          "linkedWithoutMetadata": "7e01d3751d7b8959ef9e8ee2bbcda3087d3774040668cfb9d5f123462c1706b6"
        },
        "inherit": [
          "contracts/interfaces/ICircuitValidator.sol:ICircuitValidator",
          "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [
          "contracts/lib/GenesisUtils.sol:GenesisUtils"
        ],
        "methods": [
          "initialize(address,address)",
          "setRevocationStateExpirationTime(uint256)",
          "getCircuitId()",
          "getChallengeInputIndex()",
          "verify(uint256[],uint256[2],uint256[2][2],uint256[2],uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
            },
            {
              "label": "verifier",
              "offset": 0,
              "slot": "101",
              "type": "t_contract(IVerifier)1780",
              "contract": "CredentialAtomicQuerySigValidator",
              "src": "contracts/validators/CredentialAtomicQuerySigValidator.sol:14"
            },
            {
              "label": "state",
              "offset": 0,
              "slot": "102",
              "type": "t_contract(IState)1755",
              "contract": "CredentialAtomicQuerySigValidator",
              "src": "contracts/validators/CredentialAtomicQuerySigValidator.sol:15"
            },
            {
              "label": "revocationStateExpirationTime",
              "offset": 0,
              "slot": "103",
              "type": "t_uint256",
              "contract": "CredentialAtomicQuerySigValidator",
              "src": "contracts/validators/CredentialAtomicQuerySigValidator.sol:17"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(IState)1755": {
              "label": "contract IState",
              "numberOfBytes": "20"
            },
            "t_contract(IVerifier)1780": {
              "label": "contract IVerifier",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.17"
      },
      "contracts/verifiers/ZKPVerifier.sol:ZKPVerifier": {
        "src": "contracts/verifiers/ZKPVerifier.sol:11",
        "version": {
          "withMetadata": "41431c073501ef8c10520d3d5124780dc5e13d61b170ba89f06ae40ac710dee2",
          "withoutMetadata": "23268dee1183d344e9c752b50988b4c5cbd2fd57e8c834df981fd13e9e0d35f7",
          "linkedWithoutMetadata": "23268dee1183d344e9c752b50988b4c5cbd2fd57e8c834df981fd13e9e0d35f7"
        },
        "inherit": [
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context",
          "contracts/interfaces/IZKPVerifier.sol:IZKPVerifier"
        ],
        "libraries": [
          "contracts/lib/SpongePoseidon.sol:SpongePoseidon",
          "contracts/lib/Poseidon.sol:PoseidonUnit6L"
        ],
        "methods": [
          "submitZKPResponse(uint64,uint256[],uint256[2],uint256[2][2],uint256[2])",
          "getZKPRequest(uint64)",
          "setZKPRequest(uint64,address,uint256,uint256,uint256,uint256[])",
          "setZKPRequestRaw(uint64,address,uint256,uint256,uint256,uint256[],uint256)",
          "getSupportedRequests()"
        ],
        "linkReferences": [
          {
            "src": "contracts/lib/Poseidon.sol",
            "name": "PoseidonUnit6L",
            "length": 20,
            "start": 1413,
            "placeholder": "__$149ddb96bf5d692e763ea65f305faba249$__"
          },
          {
            "src": "contracts/lib/SpongePoseidon.sol",
            "name": "SpongePoseidon",
            "length": 20,
            "start": 1287,
            "placeholder": "__$933e38ee1bac859086d8d4e5388b6d5e5f$__"
          }
        ],
        "errors": [
          {
            "kind": "external-library-linking",
            "name": "PoseidonUnit6L",
            "src": "contracts/lib/Poseidon.sol"
          },
          {
            "kind": "external-library-linking",
            "name": "SpongePoseidon",
            "src": "contracts/lib/SpongePoseidon.sol"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "proofs",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_uint64,t_bool))",
              "contract": "ZKPVerifier",
              "src": "contracts/verifiers/ZKPVerifier.sol:13"
            },
            {
              "label": "requestQueries",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint64,t_struct(CircuitQuery)1638_storage)",
              "contract": "ZKPVerifier",
              "src": "contracts/verifiers/ZKPVerifier.sol:15"
            },
            {
              "label": "requestValidators",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_uint64,t_contract(ICircuitValidator)1673)",
              "contract": "ZKPVerifier",
              "src": "contracts/verifiers/ZKPVerifier.sol:16"
            },
            {
              "label": "_supportedRequests",
              "offset": 0,
              "slot": "4",
              "type": "t_array(t_uint64)dyn_storage",
              "contract": "ZKPVerifier",
              "src": "contracts/verifiers/ZKPVerifier.sol:18"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint64)dyn_storage": {
              "label": "uint64[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(ICircuitValidator)1673": {
              "label": "contract ICircuitValidator",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_uint64,t_bool))": {
              "label": "mapping(address => mapping(uint64 => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint64,t_bool)": {
              "label": "mapping(uint64 => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint64,t_contract(ICircuitValidator)1673)": {
              "label": "mapping(uint64 => contract ICircuitValidator)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint64,t_struct(CircuitQuery)1638_storage)": {
              "label": "mapping(uint64 => struct ICircuitValidator.CircuitQuery)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(CircuitQuery)1638_storage": {
              "label": "struct ICircuitValidator.CircuitQuery",
              "members": [
                {
                  "label": "schema",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "claimPathKey",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "operator",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "value",
                  "type": "t_array(t_uint256)dyn_storage",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "queryHash",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "circuitId",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "5"
                }
              ],
              "numberOfBytes": "192"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.17"
      },
      "solidity-bytes-utils/contracts/BytesLib.sol:BytesLib": {
        "src": "solidity-bytes-utils/contracts/BytesLib.sol:12",
        "version": {
          "withMetadata": "291a6974bf45e5d10046b063c16cbbc7c496493475986d461b05ef59c545e94e",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.17"
      }
    },
    {
      "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:21",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.17"
      },
      "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:57",
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:AddressUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.17"
      },
      "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:AddressUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:9",
        "version": {
          "withMetadata": "078c5862372c8eb6539a7b2749c63739b4ac1495a74ac9e110f1722ccbfcb789",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.17"
      },
      "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:17",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.17"
      },
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin/contracts/access/Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.17"
      },
      "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:35",
        "version": {
          "withMetadata": "ae394f181d47dfb058a955630ab0c03348e0357dd32bf56a9d5fac6e45228e24",
          "withoutMetadata": "a92681274947382be0406b99a11a62ccccc6f412fcb3a354d51624c87dc00569",
          "linkedWithoutMetadata": "a92681274947382be0406b99a11a62ccccc6f412fcb3a354d51624c87dc00569"
        },
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.17"
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.17"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:13",
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.17"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.17"
      },
      "contracts/ERC20Verifier.sol:ERC20Verifier": {
        "src": "contracts/ERC20Verifier.sol:9",
        "version": {
          "withMetadata": "6b15939addd89e4a6b435729b68d834dd61aa261efab1a783688e57e193e7a04",
          "withoutMetadata": "ce619fbb0c0799b3fdf653bd199a3b36b60a39cbde7b0d691d22956ef8614ca7",
          "linkedWithoutMetadata": "ce619fbb0c0799b3fdf653bd199a3b36b60a39cbde7b0d691d22956ef8614ca7"
        },
        "inherit": [
          "contracts/verifiers/ZKPVerifier.sol:ZKPVerifier",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context",
          "contracts/interfaces/IZKPVerifier.sol:IZKPVerifier"
        ],
        "libraries": [
          "contracts/lib/GenesisUtils.sol:GenesisUtils"
        ],
        "methods": [
          "(string,string)"
        ],
        "linkReferences": [
          {
            "src": "contracts/lib/Poseidon.sol",
            "name": "PoseidonUnit6L",
            "length": 20,
            "start": 4880,
            "placeholder": "__$149ddb96bf5d692e763ea65f305faba249$__"
          },
          {
            "src": "contracts/lib/SpongePoseidon.sol",
            "name": "SpongePoseidon",
            "length": 20,
            "start": 4754,
            "placeholder": "__$933e38ee1bac859086d8d4e5388b6d5e5f$__"
          }
        ],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20Verifier",
            "src": "contracts/ERC20Verifier.sol:18"
          },
          {
            "kind": "state-variable-assignment",
            "name": "TOKEN_AMOUNT_FOR_AIRDROP_PER_ID",
            "src": "contracts/ERC20Verifier.sol:15"
          },
          {
            "kind": "external-library-linking",
            "name": "PoseidonUnit6L",
            "src": "contracts/lib/Poseidon.sol"
          },
          {
            "kind": "external-library-linking",
            "name": "SpongePoseidon",
            "src": "contracts/lib/SpongePoseidon.sol"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "proofs",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_address,t_mapping(t_uint64,t_bool))",
              "contract": "ZKPVerifier",
              "src": "contracts/verifiers/ZKPVerifier.sol:14"
            },
            {
              "label": "requestQueries",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_uint64,t_struct(CircuitQuery)1633_storage)",
              "contract": "ZKPVerifier",
              "src": "contracts/verifiers/ZKPVerifier.sol:16"
            },
            {
              "label": "requestValidators",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_uint64,t_contract(ICircuitValidator)1668)",
              "contract": "ZKPVerifier",
              "src": "contracts/verifiers/ZKPVerifier.sol:17"
            },
            {
              "label": "_supportedRequests",
              "offset": 0,
              "slot": "9",
              "type": "t_array(t_uint64)dyn_storage",
              "contract": "ZKPVerifier",
              "src": "contracts/verifiers/ZKPVerifier.sol:19"
            },
            {
              "label": "idToAddress",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC20Verifier",
              "src": "contracts/ERC20Verifier.sol:12"
            },
            {
              "label": "addressToId",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20Verifier",
              "src": "contracts/ERC20Verifier.sol:13"
            },
            {
              "label": "TOKEN_AMOUNT_FOR_AIRDROP_PER_ID",
              "offset": 0,
              "slot": "12",
              "type": "t_uint256",
              "contract": "ERC20Verifier",
              "src": "contracts/ERC20Verifier.sol:15"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint64)dyn_storage": {
              "label": "uint64[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(ICircuitValidator)1668": {
              "label": "contract ICircuitValidator",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_uint64,t_bool))": {
              "label": "mapping(address => mapping(uint64 => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint64,t_bool)": {
              "label": "mapping(uint64 => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint64,t_contract(ICircuitValidator)1668)": {
              "label": "mapping(uint64 => contract ICircuitValidator)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint64,t_struct(CircuitQuery)1633_storage)": {
              "label": "mapping(uint64 => struct ICircuitValidator.CircuitQuery)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(CircuitQuery)1633_storage": {
              "label": "struct ICircuitValidator.CircuitQuery",
              "members": [
                {
                  "label": "schema",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "claimPathKey",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "operator",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "value",
                  "type": "t_array(t_uint256)dyn_storage",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "queryHash",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "circuitId",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "5"
                }
              ],
              "numberOfBytes": "192"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.17"
      },
      "contracts/interfaces/ICircuitValidator.sol:ICircuitValidator": {
        "src": "contracts/interfaces/ICircuitValidator.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "verify(uint256[],uint256[2],uint256[2][2],uint256[2],uint256)",
          "getCircuitId()",
          "getChallengeInputIndex()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.17"
      },
      "contracts/interfaces/IState.sol:IState": {
        "src": "contracts/interfaces/IState.sol:3",
        "inherit": [],
        "libraries": [],
        "methods": [
          "getStateInfoById(uint256)",
          "getGISTRootInfo(uint256)",
          "getStateInfoByState(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.17"
      },
      "contracts/interfaces/IVerifier.sol:IVerifier": {
        "src": "contracts/interfaces/IVerifier.sol:3",
        "inherit": [],
        "libraries": [],
        "methods": [
          "verifyProof(uint256[2],uint256[2][2],uint256[2],uint256[])"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.17"
      },
      "contracts/interfaces/IZKPVerifier.sol:IZKPVerifier": {
        "src": "contracts/interfaces/IZKPVerifier.sol:7",
        "inherit": [],
        "libraries": [],
        "methods": [
          "submitZKPResponse(uint64,uint256[],uint256[2],uint256[2][2],uint256[2])",
          "setZKPRequest(uint64,address,uint256,uint256,uint256,uint256[])",
          "setZKPRequestRaw(uint64,address,uint256,uint256,uint256,uint256[],uint256)",
          "getZKPRequest(uint64)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.17"
      },
      "contracts/lib/GenesisUtils.sol:GenesisUtils": {
        "src": "contracts/lib/GenesisUtils.sol:6",
        "version": {
          "withMetadata": "09d819200db9686b680720b32eb41c3945c97334e5679b32482454163d244ce0",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [
          "solidity-bytes-utils/contracts/BytesLib.sol:BytesLib"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.17"
      },
      "contracts/lib/Poseidon.sol:Poseidon": {
        "src": "contracts/lib/Poseidon.sol:12",
        "version": {
          "withMetadata": "ab9df0e9c7ca37180782cb20513669ce1b929bca2fd4fa16bae4b4b31dd09685",
          "withoutMetadata": "2c4c5c38ea695fdca748fa475c289343c53c29f1965801d0cc56cbcb90d3f8e7",
          "linkedWithoutMetadata": "2c4c5c38ea695fdca748fa475c289343c53c29f1965801d0cc56cbcb90d3f8e7"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address,address)",
          "hash2(uint256[2])",
          "hash3(uint256[3])"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Poseidon",
            "src": "contracts/lib/Poseidon.sol:16"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_poseidonUnit2",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(PoseidonUnit2)2239",
              "contract": "Poseidon",
              "src": "contracts/lib/Poseidon.sol:13"
            },
            {
              "label": "_poseidonUnit3",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(PoseidonUnit3)2250",
              "contract": "Poseidon",
              "src": "contracts/lib/Poseidon.sol:14"
            }
          ],
          "types": {
            "t_contract(PoseidonUnit2)2239": {
              "label": "contract PoseidonUnit2",
              "numberOfBytes": "20"
            },
            "t_contract(PoseidonUnit3)2250": {
              "label": "contract PoseidonUnit3",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.17"
      },
      "contracts/lib/Poseidon.sol:PoseidonUnit1L": {
        "src": "contracts/lib/Poseidon.sol:30",
        "version": {
          "withMetadata": "e5ff2ba76408144e27456903b750e45d4e62c3fc4a07d7655d85212bf469a189",
          "withoutMetadata": "17b0d2a6201ae167d2d078450e3efc6fce2d3390b2eafe9faf68199dbaa21135",
          "linkedWithoutMetadata": "17b0d2a6201ae167d2d078450e3efc6fce2d3390b2eafe9faf68199dbaa21135"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "poseidon(uint256[1])"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.17"
      },
      "contracts/lib/Poseidon.sol:PoseidonUnit2": {
        "src": "contracts/lib/Poseidon.sol:4",
        "version": {
          "withMetadata": "2fe608730fa9e03364539b0a1e9b4265c4d6c79cc01eb725d860a69b21b851bb",
          "withoutMetadata": "8e9ceda5b98980fd515245c23186072f798515f578a8772917ce513c38d0e8b1",
          "linkedWithoutMetadata": "8e9ceda5b98980fd515245c23186072f798515f578a8772917ce513c38d0e8b1"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "poseidon(uint256[2])"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.17"
      },
      "contracts/lib/Poseidon.sol:PoseidonUnit2L": {
        "src": "contracts/lib/Poseidon.sol:34",
        "version": {
          "withMetadata": "e5c9594ba91f2d87eaefe4049b92d3ef2120f5d78d3688ff7161ef9c20bd5cd0",
          "withoutMetadata": "3f0721675fee28c4c460447a18a5873efa6d7cee90cc35a1f0606b2bdf491990",
          "linkedWithoutMetadata": "3f0721675fee28c4c460447a18a5873efa6d7cee90cc35a1f0606b2bdf491990"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "poseidon(uint256[2])"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.17"
      },
      "contracts/lib/Poseidon.sol:PoseidonUnit3": {
        "src": "contracts/lib/Poseidon.sol:8",
        "version": {
          "withMetadata": "2dbc10222852fc32bb60ddc1b0f1f00929441a1cfbfff0b9636608d67c1c5d3e",
          "withoutMetadata": "4fa0f59344401c28e6e5ac955643cd7e25ec8b05ae2732dc28fa7ddf0c1a1f48",
          "linkedWithoutMetadata": "4fa0f59344401c28e6e5ac955643cd7e25ec8b05ae2732dc28fa7ddf0c1a1f48"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "poseidon(uint256[3])"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.17"
      },
      "contracts/lib/Poseidon.sol:PoseidonUnit3L": {
        "src": "contracts/lib/Poseidon.sol:38",
        "version": {
          "withMetadata": "24d3c62577e5a90b685433b24e2fd031bccad3fb486f5abd94d0eec0f9bc804d",
          "withoutMetadata": "0516be54e1f0e432ffb631890854055486eeebd021f1fbda05d4f1d7156c9fc1",
          "linkedWithoutMetadata": "0516be54e1f0e432ffb631890854055486eeebd021f1fbda05d4f1d7156c9fc1"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "poseidon(uint256[3])"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.17"
      },
      "contracts/lib/Poseidon.sol:PoseidonUnit4L": {
        "src": "contracts/lib/Poseidon.sol:42",
        "version": {
          "withMetadata": "8c76b4e9d62845a9fa58ba53645764a65d74b3fd7de6d7a90cdc3edcb658f59f",
          "withoutMetadata": "9fd6e7042dea40de897c2835342040f09ba603c21afa3d34f65a2727723fb655",
          "linkedWithoutMetadata": "9fd6e7042dea40de897c2835342040f09ba603c21afa3d34f65a2727723fb655"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "poseidon(uint256[4])"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.17"
      },
      "contracts/lib/Poseidon.sol:PoseidonUnit5L": {
        "src": "contracts/lib/Poseidon.sol:46",
        "version": {
          "withMetadata": "844d7ba35e75d803c50986cb97b732824527b80bd61da15e97a98a5208515975",
          "withoutMetadata": "2a6c2f6a9007c69c4c0cdda5706fec1089fadc777a60492bdba6af59020772cc",
          "linkedWithoutMetadata": "2a6c2f6a9007c69c4c0cdda5706fec1089fadc777a60492bdba6af59020772cc"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "poseidon(uint256[5])"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.17"
      },
      "contracts/lib/Poseidon.sol:PoseidonUnit6L": {
        "src": "contracts/lib/Poseidon.sol:50",
        "version": {
          "withMetadata": "6b5b62582c009e27dd6a103652c7d82ceedf92b065fee18b886fde4d1293910f",
          "withoutMetadata": "c13847050cfec585911bec0cbb2b70c4f81f3df7441de6f5be0e177d0a95f989",
          "linkedWithoutMetadata": "c13847050cfec585911bec0cbb2b70c4f81f3df7441de6f5be0e177d0a95f989"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "poseidon(uint256[6])"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.17"
      },
      "contracts/lib/SpongePoseidon.sol:SpongePoseidon": {
        "src": "contracts/lib/SpongePoseidon.sol:5",
        "version": {
          "withMetadata": "1506139d88726ae14b8211338e152715830abecf37855c7a6acf381207d89e4a",
          "withoutMetadata": "1752fb648e81af4238429e62d2bccae54f54d7dfc567c85b343898ec61746422",
          "linkedWithoutMetadata": "1752fb648e81af4238429e62d2bccae54f54d7dfc567c85b343898ec61746422"
        },
        "inherit": [],
        "libraries": [
          "contracts/lib/Poseidon.sol:PoseidonUnit6L"
        ],
        "methods": [
          "hash(uint256[])"
        ],
        "linkReferences": [
          {
            "src": "contracts/lib/Poseidon.sol",
            "name": "PoseidonUnit6L",
            "length": 20,
            "start": 208,
            "placeholder": "__$149ddb96bf5d692e763ea65f305faba249$__"
          },
          {
            "src": "contracts/lib/Poseidon.sol",
            "name": "PoseidonUnit6L",
            "length": 20,
            "start": 613,
            "placeholder": "__$149ddb96bf5d692e763ea65f305faba249$__"
          }
        ],
        "errors": [
          {
            "kind": "external-library-linking",
            "name": "PoseidonUnit6L",
            "src": "contracts/lib/Poseidon.sol"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.17"
      },
      "contracts/validators/CredentialAtomicQueryMTPValidator.sol:CredentialAtomicQueryMTPValidator": {
        "src": "contracts/validators/CredentialAtomicQueryMTPValidator.sol:10",
        "version": {
          "withMetadata": "4103ba3632b820eb8fec6314d60a102c38b4c38d31f95b92f59a63c84bcb216b",
          "withoutMetadata": "e7029fcd960520e9a1993df9f881663c7bb7ab0e51d039fe2e31e72d5d25157f",
          "linkedWithoutMetadata": "e7029fcd960520e9a1993df9f881663c7bb7ab0e51d039fe2e31e72d5d25157f"
        },
        "inherit": [
          "contracts/interfaces/ICircuitValidator.sol:ICircuitValidator",
          "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [
          "contracts/lib/GenesisUtils.sol:GenesisUtils"
        ],
        "methods": [
          "initialize(address,address)",
          "setRevocationStateExpirationTime(uint256)",
          "getCircuitId()",
          "getChallengeInputIndex()",
          "verify(uint256[],uint256[2],uint256[2][2],uint256[2],uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
            },
            {
              "label": "verifier",
              "offset": 0,
              "slot": "101",
              "type": "t_contract(IVerifier)1750",
              "contract": "CredentialAtomicQueryMTPValidator",
              "src": "contracts/validators/CredentialAtomicQueryMTPValidator.sol:14"
            },
            {
              "label": "state",
              "offset": 0,
              "slot": "102",
              "type": "t_contract(IState)1725",
              "contract": "CredentialAtomicQueryMTPValidator",
              "src": "contracts/validators/CredentialAtomicQueryMTPValidator.sol:15"
            },
            {
              "label": "revocationStateExpirationTime",
              "offset": 0,
              "slot": "103",
              "type": "t_uint256",
              "contract": "CredentialAtomicQueryMTPValidator",
              "src": "contracts/validators/CredentialAtomicQueryMTPValidator.sol:17"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(IState)1725": {
              "label": "contract IState",
              "numberOfBytes": "20"
            },
            "t_contract(IVerifier)1750": {
              "label": "contract IVerifier",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.17"
      },
      "contracts/validators/CredentialAtomicQuerySigValidator.sol:CredentialAtomicQuerySigValidator": {
        "src": "contracts/validators/CredentialAtomicQuerySigValidator.sol:10",
        "version": {
          "withMetadata": "421b8916a28b88f84b94db729cf415f8b6402ae301e8e44c9373f1743cf02c29",
          "withoutMetadata": "f07fe6d3042c75f0983ee437c41eb54db69c40a95c9897a965a9052632b5635d",
          "linkedWithoutMetadata": "f07fe6d3042c75f0983ee437c41eb54db69c40a95c9897a965a9052632b5635d"
        },
        "inherit": [
          "contracts/interfaces/ICircuitValidator.sol:ICircuitValidator",
          "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [
          "contracts/lib/GenesisUtils.sol:GenesisUtils"
        ],
        "methods": [
          "initialize(address,address)",
          "setRevocationStateExpirationTime(uint256)",
          "getCircuitId()",
          "getChallengeInputIndex()",
          "verify(uint256[],uint256[2],uint256[2][2],uint256[2],uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
            },
            {
              "label": "verifier",
              "offset": 0,
              "slot": "101",
              "type": "t_contract(IVerifier)1750",
              "contract": "CredentialAtomicQuerySigValidator",
              "src": "contracts/validators/CredentialAtomicQuerySigValidator.sol:14"
            },
            {
              "label": "state",
              "offset": 0,
              "slot": "102",
              "type": "t_contract(IState)1725",
              "contract": "CredentialAtomicQuerySigValidator",
              "src": "contracts/validators/CredentialAtomicQuerySigValidator.sol:15"
            },
            {
              "label": "revocationStateExpirationTime",
              "offset": 0,
              "slot": "103",
              "type": "t_uint256",
              "contract": "CredentialAtomicQuerySigValidator",
              "src": "contracts/validators/CredentialAtomicQuerySigValidator.sol:17"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(IState)1725": {
              "label": "contract IState",
              "numberOfBytes": "20"
            },
            "t_contract(IVerifier)1750": {
              "label": "contract IVerifier",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.17"
      },
      "contracts/verifiers/ZKPVerifier.sol:ZKPVerifier": {
        "src": "contracts/verifiers/ZKPVerifier.sol:12",
        "version": {
          "withMetadata": "a660f36bd3102b5a238c166bd505cbad47f10b5c98e5e96e3ce9d95ce6b852ce",
          "withoutMetadata": "23268dee1183d344e9c752b50988b4c5cbd2fd57e8c834df981fd13e9e0d35f7",
          "linkedWithoutMetadata": "23268dee1183d344e9c752b50988b4c5cbd2fd57e8c834df981fd13e9e0d35f7"
        },
        "inherit": [
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context",
          "contracts/interfaces/IZKPVerifier.sol:IZKPVerifier"
        ],
        "libraries": [
          "contracts/lib/SpongePoseidon.sol:SpongePoseidon",
          "contracts/lib/Poseidon.sol:PoseidonUnit6L"
        ],
        "methods": [
          "submitZKPResponse(uint64,uint256[],uint256[2],uint256[2][2],uint256[2])",
          "getZKPRequest(uint64)",
          "setZKPRequest(uint64,address,uint256,uint256,uint256,uint256[])",
          "setZKPRequestRaw(uint64,address,uint256,uint256,uint256,uint256[],uint256)",
          "getSupportedRequests()"
        ],
        "linkReferences": [
          {
            "src": "contracts/lib/Poseidon.sol",
            "name": "PoseidonUnit6L",
            "length": 20,
            "start": 1413,
            "placeholder": "__$149ddb96bf5d692e763ea65f305faba249$__"
          },
          {
            "src": "contracts/lib/SpongePoseidon.sol",
            "name": "SpongePoseidon",
            "length": 20,
            "start": 1287,
            "placeholder": "__$933e38ee1bac859086d8d4e5388b6d5e5f$__"
          }
        ],
        "errors": [
          {
            "kind": "external-library-linking",
            "name": "PoseidonUnit6L",
            "src": "contracts/lib/Poseidon.sol"
          },
          {
            "kind": "external-library-linking",
            "name": "SpongePoseidon",
            "src": "contracts/lib/SpongePoseidon.sol"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "proofs",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_uint64,t_bool))",
              "contract": "ZKPVerifier",
              "src": "contracts/verifiers/ZKPVerifier.sol:14"
            },
            {
              "label": "requestQueries",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint64,t_struct(CircuitQuery)1633_storage)",
              "contract": "ZKPVerifier",
              "src": "contracts/verifiers/ZKPVerifier.sol:16"
            },
            {
              "label": "requestValidators",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_uint64,t_contract(ICircuitValidator)1668)",
              "contract": "ZKPVerifier",
              "src": "contracts/verifiers/ZKPVerifier.sol:17"
            },
            {
              "label": "_supportedRequests",
              "offset": 0,
              "slot": "4",
              "type": "t_array(t_uint64)dyn_storage",
              "contract": "ZKPVerifier",
              "src": "contracts/verifiers/ZKPVerifier.sol:19"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint64)dyn_storage": {
              "label": "uint64[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(ICircuitValidator)1668": {
              "label": "contract ICircuitValidator",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_uint64,t_bool))": {
              "label": "mapping(address => mapping(uint64 => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint64,t_bool)": {
              "label": "mapping(uint64 => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint64,t_contract(ICircuitValidator)1668)": {
              "label": "mapping(uint64 => contract ICircuitValidator)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint64,t_struct(CircuitQuery)1633_storage)": {
              "label": "mapping(uint64 => struct ICircuitValidator.CircuitQuery)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(CircuitQuery)1633_storage": {
              "label": "struct ICircuitValidator.CircuitQuery",
              "members": [
                {
                  "label": "schema",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "claimPathKey",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "operator",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "value",
                  "type": "t_array(t_uint256)dyn_storage",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "queryHash",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "circuitId",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "5"
                }
              ],
              "numberOfBytes": "192"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.17"
      },
      "solidity-bytes-utils/contracts/BytesLib.sol:BytesLib": {
        "src": "solidity-bytes-utils/contracts/BytesLib.sol:12",
        "version": {
          "withMetadata": "291a6974bf45e5d10046b063c16cbbc7c496493475986d461b05ef59c545e94e",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.17"
      }
    }
  ]
}